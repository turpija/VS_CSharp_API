@model IEnumerable<Budget.MVC.Models.ExpenseView>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    // set variables
    ViewBag.Title = "List";
    int TotalPages = ViewBag.TotalPages;
    int TotalCount = ViewBag.TotalCount;
    int ItemsPerPage = ViewBag.ItemsPerPage;
    int PageNumber = ViewBag.PageNumber;
}

@{
    // toggle sorting order
    bool sortToggle;
    if (ViewBag.SortOrderAsc == true)
    {
        sortToggle = false;
    }
    else
    {
        sortToggle = true;
    }
}

<h2>List of expenses</h2>
<p>
    @Html.ActionLink("Create New Item", "Create",new { }, new { @class = "btn btn-outline-primary" })
</p>
<p>
    <hr />
    <h4>Filterz</h4>
    <ul>
        <li>person</li>
        <li>category</li>
        <li>date from-to</li>
        <li>cost from-to</li>
    </ul>
    <hr />
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "List", new
            {
                PageNumber = PageNumber,
                OrderBy = "Name",
                SortOrderAsc = sortToggle
            }, new { @class = "btn btn-outline-secondary " })

        </th>
        <th>
            Description
            @*@Html.Label("Description", htmlAttributes: new { @class = "btn  disabled" })*@
        </th>
        <th>
            Person
            @*@Html.Label("Person", htmlAttributes: new { @class = "btn btn-sm disabled" })*@
        </th>
        <th>
            Category
            @*@Html.Label("Category", htmlAttributes: new { @class = "btn btn-sm disabled" })*@
        </th>
        <th>
            @Html.ActionLink("Date", "List", new
            {
                PageNumber = PageNumber,
                OrderBy = "Date",
                SortOrderAsc = sortToggle
            }, new { @class = "btn btn-outline-secondary " })
        </th>
        <th>
            @Html.ActionLink("Cost", "List", new
            {
                PageNumber = PageNumber,
                OrderBy = "Cost",
                SortOrderAsc = sortToggle
            }, new { @class = "btn btn-outline-secondary  " })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Person.Username)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cost)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm " })
                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm " })
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm " })
            </td>
        </tr>
    }

</table>

<footer>
    Pages:
    <div class="btn-group" role="group">

        @for (int i = 1; i <= TotalPages; i++)
        {
            if (PageNumber == i)
            {@Html.ActionLink($"{i}", "List", new { PageNumber = $"{i}", OrderBy = ViewBag.OrderBy, SortOrderAsc = ViewBag.SortOrderAsc }, new { @class = "btn btn-secondary btn-sm disabled" }) ;
        }
        else
        { @Html.ActionLink($"{i}", "List", new { PageNumber = $"{i}", OrderBy = ViewBag.OrderBy, SortOrderAsc = ViewBag.SortOrderAsc }, new { @class = "btn btn-outline-secondary btn-sm" });
    }
}
        </div>
        <br />
        Total num of items: <strong>@TotalCount</strong><br />
        Total pages: <strong>@TotalPages</strong><br />
        Items per page: <strong>@ItemsPerPage</strong><br />
</footer>

